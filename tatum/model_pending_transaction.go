/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type PendingTransaction struct {
	// ID of the pending transaction
	Id string `json:"id"`
	// Blockchain of the transaction
	Chain string `json:"chain"`
	// List of the signature Ids to be used to sign transaction. Those hashes should be in order of signing for the BTC, LTC or BCH blockchains.
	Hashes []string `json:"hashes"`
	// Serialized data of the transaction to be signed. It can be JSON, HEX or any other representation based on the blockchain.
	SerializedTransaction string `json:"serializedTransaction"`
	// ID of the pending off-chain withdrawal connected to this transaction
	WithdrawalId string `json:"withdrawalId,omitempty"`
	// In case of mnemonic type of signature Id, this is the index to the specific account that should be used for signature.
	Index float64 `json:"index,omitempty"`
	// TX hash of successful transaction.
	TxId string `json:"txId,omitempty"`
	// Additional information used for BTC, LTC, DOGE and BCH off-chain to blockchain transactions.
	WithdrawalResponses []ResponseData `json:"withdrawalResponses,omitempty"`
}

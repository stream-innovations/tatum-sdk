/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type Vc struct {
	// Virtual currency name. Must be prefixed with 'VC_'.
	Name string `json:"name"`
	// Supply of virtual currency.
	Supply string `json:"supply"`
	// Virtual currency account.
	AccountId string `json:"accountId"`
	// Exchange rate of the base pair. Each unit of the created curency will represent value of baseRate*1 basePair.
	BaseRate float64 `json:"baseRate"`
	// Base pair for virtual currency. Transaction value will be calculated according to this base pair. e.g. 1 VC_VIRTUAL is equal to 1 BTC, if basePair is set to BTC.
	BasePair string `json:"basePair"`
	// ID of customer associated with virtual currency.
	CustomerId string `json:"customerId,omitempty"`
	// Used as a description within Tatum system.
	Description string `json:"description,omitempty"`
	// Address of ERC20 token, when virtual currency is based on the Ethereum blockchain.
	Erc20Address string `json:"erc20Address,omitempty"`
	// Blockchain account for XLM or XRP based virtual currencies, which is marked as the issuer of the custom blockchain asset.
	IssuerAccount string `json:"issuerAccount,omitempty"`
	// Blockchain, on which this virtual currency is paired on. Not present, when Tatum's private ledger is used as a base ledger.
	Chain string `json:"chain,omitempty"`
	// Ethereum address, where initial supply was minted, when virtual currency is based on the Ethereum blockchain.
	InitialAddress string `json:"initialAddress,omitempty"`
}

/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type ApproveTransferCustodialWalletCelo struct {
	// The blockchain to work with
	Chain string `json:"chain"`
	// The gas pump address that holds the asset
	CustodialAddress string `json:"custodialAddress"`
	// The blockchain address to allow the transfer of the asset from the gas pump address
	Spender string `json:"spender"`
	// The type of the asset to transfer. Set <code>0</code> for fungible tokens (ERC-20 or equivalent), <code>1</code> for NFTs (ERC-721 or equivalent), or <code>2</code> for Multi Tokens (ERC-1155 or equivalent).
	ContractType float64 `json:"contractType"`
	// The address of the asset to transfer
	TokenAddress string `json:"tokenAddress,omitempty"`
	// (Only if the asset is a fungible token or Multi Token) The amount of the asset to transfer. Do not use if the asset is an NFT.
	Amount string `json:"amount,omitempty"`
	// (Only if the asset is a Multi Token or NFT) The ID of the token to transfer. Do not use if the asset is a fungible token.
	TokenId string `json:"tokenId,omitempty"`
	// The private key of the blockchain address that owns the gas pump address (\"master address\")
	FromPrivateKey string `json:"fromPrivateKey"`
	// The currency to pay for the gas fee
	FeeCurrency string `json:"feeCurrency"`
	// The nonce to be set to the transfer transaction; if not present, the last known nonce will be used
	Nonce float64 `json:"nonce,omitempty"`
	Fee *ApproveTransferCustodialWalletFee `json:"fee,omitempty"`
}

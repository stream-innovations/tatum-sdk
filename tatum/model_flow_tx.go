/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type FlowTx struct {
	// Id of the block
	ReferenceBlockId string `json:"referenceBlockId,omitempty"`
	// Script to execute in the transaction
	Script string `json:"script,omitempty"`
	// Args to the transaction
	Args []FlowTxArgs `json:"args,omitempty"`
	// Gas limit for the transaction
	GasLimit float64 `json:"gasLimit,omitempty"`
	ProposalKey *FlowTxProposalKey `json:"proposalKey,omitempty"`
	// Address from which the assets and fees were debited
	Payer string `json:"payer,omitempty"`
	// Array of payload signatures.
	PayloadSignatures []FlowTxPayloadSignatures `json:"payloadSignatures,omitempty"`
	// Array of envelope signatures.
	EnvelopeSignatures []FlowTxPayloadSignatures `json:"envelopeSignatures,omitempty"`
	// Status of the transaction
	Status float64 `json:"status,omitempty"`
	// Status cofe of the transaction
	StatusCode float64 `json:"statusCode,omitempty"`
	ErrorMessage string `json:"errorMessage,omitempty"`
	Events []FlowTxEvents `json:"events,omitempty"`
}

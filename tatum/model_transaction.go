/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type Transaction struct {
	// Source account - source of transaction(s)
	AccountId string `json:"accountId"`
	// Counter account - transaction(s) destination account. In case of blockchain recipient, this is addess of blockchain account.
	CounterAccountId string `json:"counterAccountId,omitempty"`
	// Transaction currency
	Currency string `json:"currency"`
	// Amount in account's currency
	Amount string `json:"amount"`
	// Whether the transaction is anonymous. If true, counter account owner does not see source account.
	Anonymous bool `json:"anonymous"`
	// Time in UTC of transaction.
	Created float64 `json:"created"`
	MarketValue *MarketValue `json:"marketValue"`
	// Type of operation.
	OperationType string `json:"operationType"`
	// Type of payment.
	TransactionType string `json:"transactionType"`
	// Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.
	Reference string `json:"reference"`
	// For bookkeeping to distinct transaction purpose.
	TransactionCode string `json:"transactionCode,omitempty"`
	// Note visible for sender.
	SenderNote string `json:"senderNote,omitempty"`
	// Note visible for both sender and recipient.
	RecipientNote string `json:"recipientNote,omitempty"`
	// Payment ID defined in payment order by sender.
	PaymentId string `json:"paymentId,omitempty"`
	// Present only for operationType WITHDRAWAL and XLM / XRP based accounts it represents message or destinationTag of the recipient, if present.
	Attr string `json:"attr,omitempty"`
	// For operationType DEPOSIT it represents address, on which was deposit credited for the account.
	Address string `json:"address,omitempty"`
	// For operationType DEPOSIT, BLOCKCHAIN_TRANSACTION it represents transaction id, for which deposit occured.
	TxId string `json:"txId,omitempty"`
}

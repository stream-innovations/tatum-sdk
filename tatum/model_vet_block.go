/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type VetBlock struct {
	// block number (height)
	Number int32 `json:"number,omitempty"`
	// block identifier
	Id string `json:"id,omitempty"`
	// RLP encoded block size in bytes
	Size int32 `json:"size,omitempty"`
	// parent block ID
	ParentID string `json:"parentID,omitempty"`
	// block unix timestamp
	Timestamp int32 `json:"timestamp,omitempty"`
	// block gas limit (max allowed accumulative gas usage of transactions)
	GasLimit int32 `json:"gasLimit,omitempty"`
	// Address of account to receive block reward
	Beneficiary string `json:"beneficiary,omitempty"`
	// accumulative gas usage of transactions
	GasUsed int32 `json:"gasUsed,omitempty"`
	// sum of all ancestral blocks' score
	TotalScore int32 `json:"totalScore,omitempty"`
	// root hash of transactions in the block
	TxsRoot string `json:"txsRoot,omitempty"`
	// supported txs features bitset
	TxsFeatures int32 `json:"txsFeatures,omitempty"`
	// root hash of accounts state
	StateRoot string `json:"stateRoot,omitempty"`
	// root hash of transaction receipts
	ReceiptsRoot string `json:"receiptsRoot,omitempty"`
	// the one who signed this block
	Signer string `json:"signer,omitempty"`
	// transactions IDs
	Transactions []string `json:"transactions,omitempty"`
}

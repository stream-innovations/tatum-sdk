/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type XlmLedger struct {
	// A unique identifier for this ledger.
	Id string `json:"id,omitempty"`
	// A cursor value for use in pagination.
	PagingToken string `json:"paging_token,omitempty"`
	// A hex-encoded SHA-256 hash of this ledger’s XDR-encoded form.
	Hash string `json:"hash,omitempty"`
	// The sequence number of this ledger, and the parameter used in Horizon calls that require a ledger number.
	Sequence float64 `json:"sequence,omitempty"`
	// The number of successful transactions in this ledger.
	SuccessfulTransactionCount float64 `json:"successful_transaction_count,omitempty"`
	// The number of failed transactions in this ledger.
	FailedTransactionCount float64 `json:"failed_transaction_count,omitempty"`
	// The number of operations applied in this ledger.
	OperationCount float64 `json:"operation_count,omitempty"`
	// An ISO 8601 formatted string of when this ledger was closed.
	ClosedAt string `json:"closed_at,omitempty"`
	// The total number of lumens in circulation.
	TotalCoins string `json:"total_coins,omitempty"`
	// The sum of all transaction fees.
	FeePool string `json:"fee_pool,omitempty"`
	// The fee the network charges per operation in a transaction.
	BaseFeeInStroops float64 `json:"base_fee_in_stroops,omitempty"`
	// The reserve the network uses when calculating an account’s minimum balance.
	BaseReserveInStroops float64 `json:"base_reserve_in_stroops,omitempty"`
	// The maximum number of transactions validators have agreed to process in a given ledger.
	MaxTxSetSize float64 `json:"max_tx_set_size,omitempty"`
	// The protocol version that the Stellar network was running when this ledger was committed.
	ProtocolVersion float64 `json:"protocol_version,omitempty"`
	// A base64 encoded string of the raw LedgerHeader xdr struct for this ledger.
	HeaderXdr string `json:"header_xdr,omitempty"`
}

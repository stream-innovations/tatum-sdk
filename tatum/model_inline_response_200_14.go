/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type InlineResponse20014 struct {
	// Amount of NFTs to sold in this listing. Valid only for ERC1155 listings.
	Amount string `json:"amount,omitempty"`
	// Address of the buyer, if exists.
	Buyer string `json:"buyer,omitempty"`
	// Address of the ERC20 token smart contract, which should be used for paying for the asset..
	Erc20Address string `json:"erc20Address,omitempty"`
	// If the listing is for ERC721 or ERC1155 token.
	IsErc721 bool `json:"isErc721,omitempty"`
	// ID of the listing.
	ListingId string `json:"listingId,omitempty"`
	// Address of the NFT smart contract.
	NftAddress string `json:"nftAddress,omitempty"`
	// Price of the NFT asset in native currency or ERC20 token based on the presence of erc20Address field.
	Price string `json:"price,omitempty"`
	// Address of the seller.
	Seller string `json:"seller,omitempty"`
	// State of the listing. 0 - available, 1 - sold, 2 - cancelled
	State string `json:"state,omitempty"`
}

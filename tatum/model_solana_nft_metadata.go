/*
 * Tatum API Reference
 *
 * # Welcome to the Tatum API Reference!  ## What is Tatum? ## What is Tatum?  Tatum offers a flexible framework to build, run, and scale blockchain apps fast. To learn more about the Tatum blockchain development framework, visit [our website](https://tatum.io/framework).  The Tatum API features powerful endpoints that simplify a complex blockchain into single API requests. Code for all supported blockchains using unified API calls.  ## Need help?  To chat with other developers, get help from the Support team, and engage with the thriving Tatum community, join  our [Discord server](https://discord.com/invite/tatum). For more information about how to work with Tatum, review the [online documentation](https://docs.tatum.io/).  ## About this API Reference  The Tatum API Reference is based on OpenAPI Specification v3.1.0 with a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md) applied.  # Authentication  When using the Tatum API, you authenticate yourself with an **API key**. <SecurityDefinitions /> 
 *
 * API version: 3.16.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package tatum

type SolanaNftMetadata struct {
	// Name of the NFT token.
	Name string `json:"name"`
	// Symbol of the NFT token.
	Symbol string `json:"symbol"`
	// Basis points of the seller fee.
	SellerFeeBasisPoints float64 `json:"sellerFeeBasisPoints"`
	// Metadata of the token. See https://eips.ethereum.org/EIPS/eip-721#specification for more details.
	Uri string `json:"uri"`
	// The blockchain address of the NFT collection where the NFT will be minted in. Specify the private key of the collection verifier in the <code>collectionVerifierPrivateKey</code> parameter of the request body to get the NFT verified in the collection after the NFT has been minted. To know more about Solana collections and verification, refer to the <a href=\"https://docs.metaplex.com/programs/token-metadata/certified-collections\" target=\"_blank\">Solana user documentation</a>.
	Collection string `json:"collection,omitempty"`
	// If NFT metadata are mutable or not. Defaults to true.
	Mutable bool `json:"mutable,omitempty"`
	// Royalty receivers for NFT transfers.
	Creators []SolanaNftMetadataCreator `json:"creators,omitempty"`
}
